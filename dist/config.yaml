version: 2
project_name: kubernetes-mcp-server
release:
  github:
    owner: netSkopePlatformEng
    name: kubernetes-mcp-server
  prerelease: auto
  name_template: v{{.Version}}
  header: |
    ## Kubernetes MCP Server v{{.Version}}

    Released on {{ .Date }}
  footer: |
    ## Docker Images

    ```bash
    docker pull ghcr.io/netskope/kubernetes-mcp-server:{{ .Version }}
    ```

    ## Installation

    ### macOS (Homebrew)
    ```bash
    brew tap netSkopePlatformEng/tap
    brew install kubernetes-mcp-server
    ```

    ### Linux (Binary)
    ```bash
    curl -L https://github.com/netSkopePlatformEng/kubernetes-mcp-server/releases/download/{{ .Tag }}/kubernetes-mcp-server_{{ .Version }}_linux_x86_64.tar.gz | tar xz
    sudo mv kubernetes-mcp-server /usr/local/bin/
    ```

    ### Windows
    Download the Windows archive from the releases page and extract to a directory in your PATH.

    ## Full Changelog
    https://github.com/netSkopePlatformEng/kubernetes-mcp-server/compare/{{ .PreviousTag }}...{{ .Tag }}
  mode: append
builds:
  - id: kubernetes-mcp-server
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    goamd64:
      - v1
    go386:
      - sse2
    goarm:
      - "6"
    goarm64:
      - v8.0
    gomips:
      - hardfloat
    goppc64:
      - power8
    goriscv64:
      - rva20u64
    targets:
      - linux_amd64_v1
      - linux_arm64_v8.0
      - darwin_amd64_v1
      - darwin_arm64_v8.0
      - windows_amd64_v1
    ignore:
      - goos: windows
        goarch: arm64
    dir: .
    main: ./cmd/kubernetes-mcp-server
    binary: kubernetes-mcp-server
    builder: go
    tool: go
    command: build
    ldflags:
      - -s -w
      - -X github.com/netSkopePlatformEng/kubernetes-mcp-server/pkg/version.Version={{.Version}}
      - -X github.com/netSkopePlatformEng/kubernetes-mcp-server/pkg/version.CommitHash={{.Commit}}
      - -X github.com/netSkopePlatformEng/kubernetes-mcp-server/pkg/version.BuildTime={{.Date}}
      - -X github.com/netSkopePlatformEng/kubernetes-mcp-server/pkg/version.BinaryName={{.ProjectName}}
    flags:
      - -trimpath
      - -mod=readonly
    env:
      - CGO_ENABLED=0
archives:
  - id: kubernetes-mcp-server
    builds_info:
      mode: 493
    name_template: '{{ .ProjectName }}_ {{- .Version }}_ {{- .Os }}_ {{- if eq .Arch "amd64" }}x86_64 {{- else if eq .Arch "386" }}i386 {{- else }}{{ .Arch }}{{ end }} {{- if .Arm }}v{{ .Arm }}{{ end }}'
    formats:
      - tar.gz
    files:
      - src: LICENSE*
      - src: README*
      - src: CHANGELOG*
      - src: docs/*
nfpms:
  - file_name_template: '{{ .PackageName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    package_name: kubernetes-mcp-server
    dependencies:
      - kubectl
    recommends:
      - helm
    id: kubernetes-mcp-server
    formats:
      - deb
      - rpm
      - apk
    vendor: Netskope
    homepage: https://github.com/netSkopePlatformEng/kubernetes-mcp-server
    maintainer: Platform Engineering <platform-eng@netskope.com>
    description: Kubernetes Model Context Protocol (MCP) server for AI agents
    license: Apache-2.0
    bindir: /usr/bin
    libdirs:
      header: /usr/include
      carchive: /usr/lib
      cshared: /usr/lib
snapshot:
  version_template: '{{ .Tag }}-next-{{ .ShortCommit }}'
checksum:
  name_template: checksums.txt
  algorithm: sha256
changelog:
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^ci:'
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
  sort: asc
  use: github
  format: '{{ .SHA }}: {{ .Message }} ({{ with .AuthorUsername }}@{{ . }}{{ else }}{{ .AuthorName }} <{{ .AuthorEmail }}>{{ end }})'
  groups:
    - title: "\U0001F680 Features"
      regexp: ^.*?feat(\([[:word:]]+\))??!?:.+$
    - title: "\U0001F41B Bug Fixes"
      regexp: ^.*?fix(\([[:word:]]+\))??!?:.+$
      order: 1
    - title: ⚡ Performance
      regexp: ^.*?perf(\([[:word:]]+\))??!?:.+$
      order: 2
    - title: ♻️ Refactoring
      regexp: ^.*?refactor(\([[:word:]]+\))??!?:.+$
      order: 3
    - title: "\U0001F4E6 Dependencies"
      regexp: ^.*?deps(\([[:word:]]+\))??!?:.+$
      order: 4
    - title: Other Changes
      order: 999
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
    - go mod tidy
    - go fmt ./...
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  skip: auto
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    enabled: "false"
    message_template: |
      *{{ .ProjectName }} {{ .Tag }}* has been released!
      Check it out at {{ .ReleaseURL }}
    username: GoReleaser
  discord:
    enabled: "false"
    message_template: |
      **{{ .ProjectName }} {{ .Tag }}** has been released!
      Check it out at {{ .ReleaseURL }}
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ mdv2escape .ProjectName }} {{ mdv2escape .Tag }} is out{{ mdv2escape "!" }} Check it out at {{ mdv2escape .ReleaseURL }}'
    parse_mode: MarkdownV2
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
    expected_status_codes:
      - 200
      - 201
      - 202
      - 204
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
  bluesky:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
git:
  tag_sort: -version:refname
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
